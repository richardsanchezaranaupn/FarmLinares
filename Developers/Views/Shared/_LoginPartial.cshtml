@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager



<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        <li class="nav-item" style="text-align: right;">
            <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"
               style="font-family: Poppins; font-size:25px; color:#885FDB; font-weight: bold;"> ¡BIENVENIDO  @UserManager.GetUserName(User)!</a>
    </li>

        <li class="nav-item" style="text-align:right">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Privacy", "Home", new { area = "" })">
                <button id="logout" type="submit" class="btn btn-outline-info"
                        style="font-family: Poppins; font-size:20px; font-weight: bold;">Cerrar Sesión</button>
        </form>
    </li> 

}
else
{
    
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Registrarse</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Iniciar Sesión</a>
    </li> 
}
</ul>
